#LyX 1.4.2 created this file. For more info see http://www.lyx.org/
\lyxformat 245
\begin_document
\begin_header
\textclass article
\language english
\inputencoding auto
\fontscheme default
\graphics default
\paperfontsize default
\spacing single
\papersize a4paper
\use_geometry false
\use_amsmath 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 2
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes true
\end_header

\begin_body

\begin_layout Title
Publishing Mailing Lists on the Semantic Web
\end_layout

\begin_layout Author
Diego Berrueta <diego@berrueta.net>
\end_layout

\begin_layout Date
June 2005
\end_layout

\begin_layout Abstract
Mailing list archives (i.e., the messages posted up-to-now) are often published
 on the web and indexed by conventional search engines.
 They store a vast knowledge capital.
 However, the ability to automatically recognize and process the information
 is mostly lost at publishing time.
 As a result, the current mailing list archives are hard to query and have
 a limited use.
 This paper describes the use of the Semantic Web technology in order to
 avoid the information loss and to allow new applications able to exploit
 this information in a more convenient way.
\end_layout

\begin_layout Section*
Keywords
\end_layout

\begin_layout Standard
Mailing list, Semantic Web, archives, RDF.
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
Mailing lists are one of the best communication tools on the Internet.
 They cover any possible topic.
 Nowadays, mailing list archives (i.e., the previously posted messages) are
 often published on the web, making them available for indexation by the
 search bots.
 Users can read the archives using their web browser, and no previous subscripti
on is required.
 We can also query the archives using general search engines like Google.
\end_layout

\begin_layout Standard
These archives make a huge knowledge base, in particular for technical areas.
 A common pattern usage is to type or paste an error message from a software
 application into the Google search box.
 In many cases, mailing lists posts are part of the search results, probably
 because somebody has already asked for help in a mailing list.
 If we are lucky, we can then browse to a reply post containing hints to
 solve the problem.
\end_layout

\begin_layout Section
\begin_inset LatexCommand \label{sec:Problemas}

\end_inset

Problems of the Current Model
\end_layout

\begin_layout Standard
Unfortunately, browsing the list archives with a web browser is not as flexible
 as doing it with our favorite e-mail client.
 For instance, there are some simple tasks that, in general, cannot be performed
 with a web browser:
\end_layout

\begin_layout Itemize
To show the conversation thread as a tree.
\end_layout

\begin_layout Itemize
To print the whole thread.
\end_layout

\begin_layout Itemize
To filter the messages in a given date range.
\end_layout

\begin_layout Itemize
To hide the messages without replies.
\end_layout

\begin_layout Itemize
To show only the messages from a given author.
\end_layout

\begin_layout Itemize
To search a string just in one thread.
\end_layout

\begin_layout Itemize
To download a whole thread into a file for offline browsing.
\end_layout

\begin_layout Itemize
To reply to a message using an e-mail client (or a webmail), quoting parts
 of the original one.
\end_layout

\begin_layout Standard
It is not uncommon for mailing list archives to be mirrored at different
 sites.
 Unfortunately, search bots are rarely aware of mirrors, and it is very
 difficult to detect duplicated messages.
 As a consequence, sometimes the same message appears more than once in
 the results page of the search engine.
 This is annoying for users.
 Obviously, the ideal behavior would be not to show any duplicate result.
\end_layout

\begin_layout Section
The Source of the Problems: Information Loss
\end_layout

\begin_layout Standard
The origin of these problems can be traced to the information loss that
 happens when e-mail messages are transformed to HTML for the web.
\end_layout

\begin_layout Standard
Some of the most popular mailing list managers (such as Mailman or Majordomo)
 store the messages into a file in Mailbox (mbox) format.
 Later, other independent applications read this file and create static
 HTML webpages, usually one page for each message.
 In addition, they can generate complex indexes by date, author or thread,
 and cross-references to the previous and next messages.
 But even it the best case, this information is of use only for humans,
 but not recognizable as such by machines.
 As a consequence, any possibility of further automatic processing is almost
 lost.
\end_layout

\begin_layout Standard
Some of the information pieces lost in this process are:
\end_layout

\begin_layout Itemize
The message subject.
\end_layout

\begin_layout Itemize
The name and address of the author.
\end_layout

\begin_layout Itemize
The date of the message.
\end_layout

\begin_layout Itemize
The reference to the mailing list in which the message was published.
\end_layout

\begin_layout Itemize
The reference to the previous message, if it exists.
\end_layout

\begin_layout Itemize
The references to the replies by other users.
\end_layout

\begin_layout Section
Our Proposal
\end_layout

\begin_layout Standard
The technology of the Semantic Web, in particular, the RDF framework, is
 perfectly suited for preserving all the information described above.
 As all this information is already available in the original format (the
 Mailbox file), a minimal amount of additional processing is required (just
 some work for generating cross-references and indexes).
 The only requirement is that the transformation process must publish this
 information in RDF beside the HTML version.
 With little effort, the mailing lists can be aware of the Semantic Web.
\end_layout

\begin_layout Section
Applications
\end_layout

\begin_layout Standard
The enrichment of the mailing list archives with machine-processable data
 opens the door to a number of new applications:
\end_layout

\begin_layout Itemize
Search engines may avoid showing duplicated results with the same mailing
 list message.
 In order to achieve this, their crawlers should recognize the mirrors of
 the web archives.
\end_layout

\begin_layout Itemize
New features, such as those pointed in Section\InsetSpace ~

\begin_inset LatexCommand \ref{sec:Problemas}

\end_inset

, can be implemented in the web browsers.
 These new features, probably in the form of plug-ins or extensions to current
 web browsers, would enhance user's experience when reading the mailing
 list archives through the web.
\end_layout

\begin_layout Itemize
Specialized software agents could gather more information about mailing
 list subscribers, like a compilation of all the mailing lists in which
 a given user has posted messages.
 Linking the information with FOAF 
\begin_inset Foot
status open

\begin_layout Standard
http://www.foaf-project.org/
\end_layout

\end_inset

 would make possible to retrieve the photographs of all the posters in a
 given mailing lists (like it is currently done -by hand- in some blog aggregato
rs
\begin_inset Foot
status open

\begin_layout Standard
See GNOME Planet, http://planet.gnome.org/heads/
\end_layout

\end_inset

), or plot their position on a map
\begin_inset Foot
status open

\begin_layout Standard
Similar to the Debian Developer map at http://www.debian.org/devel/developers.loc
\end_layout

\end_inset

.
\end_layout

\begin_layout Itemize
Easier localization of the user's interface, without being dependent on
 the language in which the HTML archives are published on.
\end_layout

\begin_layout Itemize
Improved accessibility for disabled people, by means of alternative presentation
s of the information (for instance, text-to-speech).
\end_layout

\begin_layout Section
\begin_inset LatexCommand \label{sec:Trabajos-relacionados}

\end_inset

Related Work
\end_layout

\begin_layout Standard
There exist some similar approaches.
\end_layout

\begin_layout Standard
The DOAML vocabulary 
\begin_inset Foot
status open

\begin_layout Standard
http://www.doaml.net/
\end_layout

\end_inset

 is a RDF vocabulary designed to describe mailing lists.
 The project homepage includes some examples using the W3C mailing lists.
 Nevertheless, the expressiveness is not enough.
 For instance, references to past posts are just links to their HTML version.
\end_layout

\begin_layout Standard
There are also RDF schemes to describe mail messages (without being specific
 for mailing lists), namely EMiR
\begin_inset Foot
status open

\begin_layout Standard
http://xmlns.filsa.org/emir/
\end_layout

\end_inset

 and XMTP
\begin_inset Foot
status open

\begin_layout Standard
http://www.openhealth.org/xmtp/
\end_layout

\end_inset

.
\end_layout

\begin_layout Section
Conclusions
\end_layout

\begin_layout Standard
The mailing list archives can enter the Semantic Web just by using a suited
 application to retain as much information as possible using the proper
 language (RDF), as a complement to the HTML version.
 Deployment of such application would require little effort by mailing list
 administrators, so adoption could be fast
\begin_inset Foot
status open

\begin_layout Standard
Actually, any subscriber (not just the administrator) would be able to use
 such application.
 The only requirement is to have access to all the prior posts, probably
 already stored in his own e-mail client.
\end_layout

\end_inset

.
 It is not required any data enrichment by an expert, so huge volumes of
 information can be easily and quickly processed.
 This is an important factor because some mailing lists have a high activity
 and many years of existence.
\end_layout

\begin_layout Standard
Development of such application requires, first of all, the definition of
 an information scheme, probably a combination of the existing ones (see
 Section 
\begin_inset LatexCommand \ref{sec:Trabajos-relacionados}

\end_inset

).
 Secondly, Mailbox files must be processed in order to extract the already-exist
ent information.
 This second step can take as a starting point some of the current free
 software tools that generate HTML from a Mailbox.
\end_layout

\end_body
\end_document
